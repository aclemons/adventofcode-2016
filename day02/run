#!/bin/sh

# MIT License
#
# Copyright (c) 2016 Andrew Clemons
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

next_button() {
  sed -e 's/\(.\)/\1\n/g' | {
    CURRENT="$1"
    PART1="$2"

    while read -r MOVE ; do
      if "$PART1" ; then
        if [ "xU" = "x$MOVE" ] ; then
          NEXT=$((CURRENT - 3))

          if [ $NEXT -lt 1 ] ; then
            NEXT=$CURRENT
          fi
        elif [ "xD" = "x$MOVE" ] ; then
          NEXT=$((CURRENT + 3))

          if [ $NEXT -gt 9 ] ; then
            NEXT=$CURRENT
          fi
        elif [ "xL" = "x$MOVE" ] ; then
          if case $CURRENT in 1|4|7) true ;; *) false ;; esac ; then
            NEXT=$CURRENT
          else
            NEXT=$((CURRENT - 1))
          fi
        elif [ "xR" = "x$MOVE" ] ; then
          if case $CURRENT in 3|6|9) true ;; *) false ;; esac ; then
            NEXT=$CURRENT
          else
            NEXT=$((CURRENT + 1))
          fi
        fi
      else
        if [ "xU" = "x$MOVE" ] ; then
          if case $CURRENT in 13|3) true ;; *) false ;; esac ; then
            NEXT=$((CURRENT - 2))
          elif case $CURRENT in 6|7|8|10|11|12) true ;; *) false ;; esac ; then
            NEXT=$((CURRENT - 4))
          else
            NEXT=$CURRENT
          fi
        elif [ "xD" = "x$MOVE" ] ; then
          if case $CURRENT in 11|1) true ;; *) false ;; esac ; then
            NEXT=$((CURRENT + 2))
          elif case $CURRENT in 2|3|4|6|7|8) true ;; *) false ;; esac ; then
            NEXT=$((CURRENT + 4))
          else
            NEXT=$CURRENT
          fi
        elif [ "xL" = "x$MOVE" ] ; then
          if case $CURRENT in 13|10|5|2|1) true ;; *) false ;; esac ; then
            NEXT=$CURRENT
          else
            NEXT=$((CURRENT - 1))
          fi
        elif [ "xR" = "x$MOVE" ] ; then
          if case $CURRENT in 13|12|9|4|1) true ;; *) false ;; esac ; then
            NEXT=$CURRENT
          else
            NEXT=$((CURRENT + 1))
          fi
        fi
      fi

      CURRENT=$NEXT
    done

    echo "$CURRENT"
  }
}

PART1=true
for alg in "part1" "part2" ; do
  {

    CODE=""
    BUTTON=5

    while read -r LINE ; do
      BUTTON="$(printf '%s' "$LINE" | next_button "$BUTTON" "$PART1")"

      CODE="$CODE$(printf '%x' "$BUTTON" | tr '[:lower:]' '[:upper:]')"
    done

    echo "The bathroom code for $alg is $CODE"

    PART1=false
  } < "$1"
done
