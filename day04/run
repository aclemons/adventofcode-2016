#!/usr/bin/env python2
#
# MIT License
#
# Copyright (c) 2016 Andrew Clemons
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

import sys
import re
import string

from itertools import *

sum = 0
north_pole = None
decryption_set = string.ascii_lowercase
decryption_size = len(decryption_set)

with sys.stdin as fp:
    for line in fp:
        line = line.rstrip()
        m = re.search(r'^(.*?)-(\d+)\[(.*?)\]', line)

        name = m.group(1)
        sector = int(m.group(2))
        checksum = m.group(3)

        results = sorted([list(g) for k, g in groupby(sorted(re.sub('-', '', name)))], key=lambda arr: -len(arr))

        matcher = lambda idx: (results[idx])[0] == checksum[idx]

        if not (False in map(matcher, range(0, 5))):
            sum += int(sector)

        decrypted_name = ''.join(map(lambda c: (' ' if c == '-' else (decryption_set[decryption_set.index(c) + (sector % decryption_size) - decryption_size])), name))

        if 'northpole object storage' == decrypted_name:
            north_pole = sector

print "The sum of the sector IDs of the real rooms {0}".format(sum)
print "The sector ID of the room where North Pole objects are stored is {0}".format(north_pole)
